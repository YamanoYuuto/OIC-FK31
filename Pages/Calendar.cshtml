@page
@model OIC_FK31.Pages.CalendarModel
@{
}

<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>施設予約システム - Thank you</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/Calendar.css" />
</head>
<body>
    <nav class="navbar navbar-expand-lg">
        <div class="container-fluid navbar-content">
            <img src="~/images/Logo.png" alt="施設予約システム" class="img-fluid" />
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/Facilities">今すぐ予約</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/ReservationStatus">予約状況確認</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/CancelReservation">予約キャンセル</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            管理者の方
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <li><a class="dropdown-item" href="/FacilityRegistration">施設の登録と変更</a></li>
                            <li><a class="dropdown-item" href="/UserManagement">使用者情報管理</a></li>
                            <li><a class="dropdown-item" href="/ReportOutput">事務員用レポート出力</a></li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a id="logoutButton" class="nav-link" href="Login.html">ログアウト</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <nav class="navbar navbar-expand-lg" style="background-color: rgb(190, 190, 190);">
        <div class="container-fluid navbar-content">
            <p>
                <strong>
                    施設名     <!-- 施設名を表示する要素 -->
                    <p1 id="facility-name-display">施設名がここに表示されます</p1>
                </strong>
            </p>
        </div>
    </nav>

    <div class="container mt-5"></div>

    <h2 class="text-center">日時を選択してください</h2>
    <div id="calendar" class="mx-auto" style="max-width: 80%;"></div>

    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let selectedTimes = {};

        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var initialView = window.innerWidth < 768 ? 'timeGridDay' : 'dayGridMonth';
            var headerToolbar = window.innerWidth < 768 ? {
                left: 'prev,next',
                center: 'title',
                right: ''
            } : {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay'
            };
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: initialView,
                headerToolbar: headerToolbar,
                locale: 'ja',
                contentHeight: 'auto',
                aspectRatio: 1.5,
                slotDuration: '00:30:00',
                allDaySlot: false,
                buttonText: {
                    today: '今日',
                    month: '月',
                    week: '週',
                    day: '日'
                },
                dateClick: function (info) {
                    calendar.changeView('timeGridDay', info.dateStr);
                },
                views: {
                    timeGridDay: {
                        slotLabelInterval: '00:30',
                        slotMinTime: '08:00',
                        slotMaxTime: '20:00'
                    },
                    timeGridWeek: {
                        slotLabelInterval: '00:30',
                        slotMinTime: '08:00',
                        slotMaxTime: '20:00'
                    }
                },
                selectable: true,
                select: function (info) {
                    // Clear previous selection
                    calendar.getEvents().forEach(event => {
                        if (event.display === 'background') {
                            event.remove();
                        }
                    });
                    selectedTimes = {};

                    const date = info.start.toLocaleDateString("ja-JP", { year: 'numeric', month: 'long', day: 'numeric' });
                    const startTime = info.start.toLocaleTimeString("ja-JP", { hour: '2-digit', minute: '2-digit' });
                    const endTime = info.end.toLocaleTimeString("ja-JP", { hour: '2-digit', minute: '2-digit' });

                    if (startTime === "00:00") return;

                    selectedTimes[date] = [`${startTime} ～ ${endTime}`];

                    let event = {
                        start: info.start,
                        end: info.end,
                        display: 'background',
                        color: 'green'
                    };
                    calendar.addEvent(event);

                    // Save to localStorage
                    localStorage.setItem('selectedTimes', JSON.stringify(selectedTimes));
                }
            });

            calendar.render();

            // Load saved times from localStorage
            loadSavedTimes(calendar);

            document.querySelector('h2').insertAdjacentHTML('beforebegin', '<div class="text-center mb-3"><button id="confirmButton" class="btn btn-primary btn-lg">決定</button></div>');

            document.getElementById('confirmButton').addEventListener('click', function () {
                if (Object.keys(selectedTimes).length > 0) {
                    Swal.fire({
                        title: 'これらの時間を選択しますか？',
                        html: Object.entries(selectedTimes).map(([date, times]) => {
                            return `<b>${date}</b>: ${times.join(', ')}`;
                        }).join('<br>'),
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'はい',
                        cancelButtonText: 'いいえ'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            localStorage.setItem('selectedTimes', JSON.stringify(selectedTimes));
                            window.location.href = "/Info";
                        }
                    });
                } else {
                    Swal.fire({
                        title: '時間が選択されていません',
                        text: '少なくとも1つの時間を選択してください。',
                        icon: 'warning',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: 'OK'
                    });
                }
            });

            // ウィンドウのリサイズに対応
            window.addEventListener('resize', function () {
                calendar.updateSize();
            });
        });

        function loadSavedTimes(calendar) {
            const savedTimes = JSON.parse(localStorage.getItem('selectedTimes'));
            if (savedTimes) {
                Object.entries(savedTimes).forEach(([date, times]) => {
                    times.forEach(time => {
                        const [startTime, endTime] = time.split(' ～ ');
                        const startDate = new Date(`${date} ${startTime}`);
                        const endDate = new Date(`${date} ${endTime}`);

                        let event = {
                            start: startDate,
                            end: endDate,
                            display: 'background',
                            color: 'green'
                        };
                        calendar.addEvent(event);
                    });
                });
            }
        }
    </script>

    <!-- Bootstrap JS -->
    <!-- SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById("logoutButton").addEventListener("click", function (event) {
            event.preventDefault(); // デフォルトのリンク動作を防ぐ
            Swal.fire({
                title: "ログアウトしますか？",
                text: "",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "はい",
                cancelButtonText: "いいえ",
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: "ログアウトしました",
                        text: "",
                        icon: ""
                    }).then(() => {
                        window.location.href = "/Identity/Account/Logout";
                    });
                }
            });
        });
    </script>

    <script>
        // localStorageから施設名を取得して表示する処理
        window.addEventListener('DOMContentLoaded', () => {
            const facilityName = localStorage.getItem('selectedFacilityName');

            if (facilityName) {
                document.getElementById('facility-name-display').textContent = facilityName;
            }
        });
    </script>
</body>
</html>

